<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export4.dtd">
<en-export export-date="20231206T042426Z" application="Evernote" version="10.67.4">
  <note>
    <title>Adobe Access Key</title>
    <created>20230928T070119Z</created>
    <updated>20231005T064314Z</updated>
    <note-attributes>
      <author>Ha Dang</author>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div>Public Key: <span style="color:rgb(80, 80, 80);">16fe1713652049acc0cde65d297c2e71</span></div><div><span style="color:rgb(80, 80, 80);">Private Key: 899cd4b93f3d6240c356fac431b7bd04</span></div></en-note>      ]]>
    </content>
  </note>
  <note>
    <title>Magento Installation Guide ( Docker &amp; Local Machine)</title>
    <created>20231003T091918Z</created>
    <updated>20231003T092028Z</updated>
    <note-attributes>
      <author>Ha Dang</author>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div>MAGENTO INSTALLATION</div><div><br/></div><div>Docker version</div><div><br/></div><div>With empty project ( Doesn't have any mount data)</div><div><br/></div><div>Using this docker-compose.yml</div><div><br/></div><div>```</div><div>version: '3'</div><div>services:</div><div>  mariadb:</div><div>    image: docker.io/bitnami/mariadb:10.4</div><div>    environment:</div><div>      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}</div><div>      - MARIADB_USER=${MARIADB_USER}</div><div>      - MARIADB_DATABASE=${MARIADB_DATABASE}</div><div>    ports:</div><div>      - "3306:3306"</div><div>    volumes:</div><div>      - mariadb_data:/bitnami/mariadb</div><div>  magento:</div><div>    image: docker.io/bitnami/magento:2</div><div>    ports:</div><div>      - '80:8080'</div><div>      # - '443:8443'</div><div>    environment:</div><div>      - MAGENTO_HOST=${MAGENTO_HOST}</div><div>      - MAGENTO_DATABASE_HOST=${MAGENTO_DATABASE_HOST}</div><div>      - MAGENTO_DATABASE_PORT_NUMBER=${MAGENTO_DATABASE_PORT_NUMBER}</div><div>      - MAGENTO_DATABASE_USER=${MAGENTO_DATABASE_USER}</div><div>      - MAGENTO_DATABASE_NAME=${MAGENTO_DATABASE_NAME}</div><div>      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}</div><div>      - ELASTICSEARCH_PORT_NUMBER=${ELASTICSEARCH_PORT_NUMBER}</div><div>      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}</div><div>    volumes:  </div><div>      - magento_data:/bitnami/magento</div><div>    depends_on:</div><div>      - mariadb</div><div>      - elasticsearch</div><div>  elasticsearch:</div><div>    image: docker.io/bitnami/elasticsearch:7</div><div>    ports:</div><div>      - "9200:9200"</div><div>    volumes:</div><div>      - elasticsearch_data:/bitnami/elasticsearch/data</div><div><br/></div><div>volumes:</div><div>  mariadb_data: {}</div><div>  magento_data: {}</div><div>  elasticsearch_data: {}</div><div><br/></div><div>```</div><div><br/></div><div>Ubuntu version</div><div><br/></div><div>Application version</div><div>    Apache2 2.4.*</div><div>    php version 8.*</div><div>    composer version 2.6.2</div><div>    elasticsearch version 7.17.13</div><div>    mysql 8.0.*</div><div><br/></div><div>ElasticSearch</div><div><br/></div><div>    curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</div><div><br/></div><div>    echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list</div><div><br/></div><div>    sudo apt update</div><div><br/></div><div>    sudo apt install elasticsearch</div><div><br/></div><div>    sudo nano /etc/elasticsearch/elasticsearch.yml</div><div>    -> config `network.host to 0.0.0.0` || `localhost`</div><div>    -> if 0.0.0.0 add more line: `discovery.type:single-node`</div><div><br/></div><div>    sudo ufw allow from &lt;ip-address> to any port 9200</div><div>    ex: sudo ufw allow from 127.0.0.1 to any port 9200</div><div><br/></div><div>    ex: For anywhere</div><div>    sudo ufw allow to any port 9200</div><div><br/></div><div>    sudo ufw enable</div><div><br/></div><div>    sudo ufw status</div><div><br/></div><div>Magento2</div><div>    Install repo with composer</div><div><br/></div><div>        cd /var/www/html/</div><div><br/></div><div>        composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition &lt;install-directory-name></div><div><br/></div><div>    Setting MySQL</div><div>        mysql -u root -p</div><div><br/></div><div>        CREATE DATABASE magento;</div><div>        CREATE USER 'magento'@'localhost' IDENTIFIED BY 'your-password';</div><div>        GRANT ALL PRIVILEGES ON magento.* TO 'magento'@'localhost';</div><div>        FLUSH PRIVILEGES;</div><div>        EXIT;</div><div><br/></div><div>    Setting Apache2</div><div><br/></div><div>        Note: If you want to using port 80, remember disable all site still using port 80</div><div><br/></div><div>        sudo nano /etc/apache2/sites-available/magento2.conf</div><div><br/></div><div>        ```</div><div>        &lt;VirtualHost *:80></div><div>            ServerAdmin webmaster@yourdomain.com</div><div>            DocumentRoot /var/www/html/magento2</div><div>            ServerName yourdomain.com</div><div><br/></div><div>            &lt;Directory /var/www/html/magento2></div><div>                Options Indexes FollowSymLinks MultiViews</div><div>                AllowOverride All</div><div>                Require all granted</div><div>            &lt;/Directory></div><div><br/></div><div>            ErrorLog ${APACHE_LOG_DIR}/magento-error.log</div><div>            CustomLog ${APACHE_LOG_DIR}/magento-access.log combined</div><div>        &lt;/VirtualHost></div><div><br/></div><div>        ```</div><div><br/></div><div>        sudo a2ensite magento2.conf</div><div><br/></div><div>        sudo a2enmod rewrite</div><div><br/></div><div>        sudo systemctl restart apache2</div><div><br/></div><div>    Install Magento</div><div><br/></div><div>        Set Permission</div><div><br/></div><div>        cd /var/www/html</div><div><br/></div><div>        sudo chown -R :www-data .</div><div><br/></div><div>        sudo find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \;</div><div><br/></div><div>        sudo find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} \;</div><div><br/></div><div>        sudo chmod u+x bin/magento</div><div><br/></div><div>        Install Magento</div><div><br/></div><div>        cd /var/www/html/&lt;magento-project></div><div><br/></div><div>        Note: Edit commands below</div><div>        ```</div><div>        bin/magento setup:install \</div><div>        --base-url=http://localhost/magento2ee \</div><div>        --db-host=localhost \</div><div>        --db-name=magento \</div><div>        --db-user=magento \</div><div>        --db-password=magento \</div><div>        --admin-firstname=admin \</div><div>        --admin-lastname=admin \</div><div>        --admin-email=admin@admin.com \</div><div>        --admin-user=admin \</div><div>        --admin-password=admin123 \</div><div>        --language=en_US \</div><div>        --currency=USD \</div><div>        --timezone=America/Chicago \</div><div>        --use-rewrites=1 \</div><div>        --search-engine=elasticsearch7 \</div><div>        --elasticsearch-host=os-host.example.com \</div><div>        --elasticsearch-port=9200 \</div><div>        --elasticsearch-index-prefix=magento2 \</div><div>        --elasticsearch-timeout=15</div><div>        --backend-frontname=admin</div><div>        ```</div></en-note>      ]]>
    </content>
  </note>
  <note>
    <title>Magento setup:install</title>
    <created>20231003T092155Z</created>
    <updated>20231005T063347Z</updated>
    <note-attributes>
      <author>Ha Dang</author>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div>bin/magento setup:install  --base-url=http://192.168.10.30 --db-host=192.168.10.30 --db-name=magento  --db-user=admin --db-password=MMS123456 --admin-firstname=admin  --admin-lastname=admin   --admin-email=admin@admin.com  --admin-user=admin  --admin-password=MMS123456 --language=en_US  --currency=USD  --timezone=America/Chicago  --use-rewrites=1  --search-engine=elasticsearch7  --elasticsearch-host=192.168.10.30  --elasticsearch-port=9200  --elasticsearch-index-prefix=magento2  --elasticsearch-timeout=15  --backend-frontname=admin</div><div><br/></div><div><br/></div><div>bin/magento setup:install --admin-firstname=Ha --admin-lastname=Dang --admin-email=hpdang@mmsofts.com --admin-user=admin</div><div>--admin-password=MMS123456 --language=en_US --use-rewrites=1 --search-engine=elasticsearch7 --backend-frontname=admin</div><div><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>php -r "echo ini_get('memory_limit').PHP_EOL;"</div></div><div><br/></div><div>docker exec -it magento /bin/bash </div><div>php bin/magento setup:install \</div><div>  --base-url=http://192.168.10.30/ \</div><div>  --db-host=192.168.10.30\</div><div>  --db-name=magento \</div><div>  --db-user=admin \</div><div>  --db-password=MMS123456 \</div><div>  --admin-firstname=Admin \</div><div>  --admin-lastname=User \</div><div>  --admin-email=admin@example.com \</div><div>  --admin-user=admin \</div><div>  --admin-password=admin123 \</div><div>  --language=en_US \</div><div>  --currency=USD \</div><div>  --timezone=America/New_York \</div><div>  --use-rewrites=1</div><div><br/></div><div>--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</div><div>FROM php:7.3-fpm</div><div><br/></div><div>RUN apt-get update &amp;&amp; apt-get install -y \</div><div>    libfreetype6-dev \</div><div>    libjpeg62-turbo-dev \</div><div>    libpng-dev \</div><div>    libicu-dev \</div><div>    libxml2-dev \</div><div>    libxslt-dev \</div><div>    libzip-dev \</div><div>    git vim unzip cron \</div><div>    --no-install-recommends \</div><div>    &amp;&amp; rm -r /var/lib/apt/lists/*</div><div><br/></div><div>RUN docker-php-ext-configure gd --with-jpeg-dir=/usr/lib \</div><div>    --with-freetype-dir=/usr/include/freetype2 \</div><div>    &amp;&amp; docker-php-ext-install -j$(nproc) gd</div><div><br/></div><div>RUN docker-php-ext-configure intl \</div><div>    &amp;&amp; docker-php-ext-install -j$(nproc) intl</div><div><br/></div><div>RUN docker-php-ext-install -j$(nproc) opcache bcmath pdo_mysql soap xsl zip sockets</div><div><br/></div><div># Install Composer</div><div>RUN curl -sS https://getcomposer.org/installer | php \</div><div>    &amp;&amp; mv composer.phar /usr/local/bin/composer</div><div><br/></div><div># Create user magento</div><div>RUN useradd -m -s /bin/bash magento \</div><div>    &amp;&amp; usermod -a -G www-data magento</div><div><br/></div><div>RUN cp "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"</div><div><br/></div><div>ADD ./php-custom.ini $PHP_INI_DIR/conf.d/</div><div><br/></div><div>CMD ["php-fpm"]</div><div><br/></div><div>EXPOSE 9000</div></en-note>      ]]>
    </content>
  </note>
  <note>
    <title>Step by step Docker Compose - Magento</title>
    <created>20231004T095500Z</created>
    <updated>20231004T100153Z</updated>
    <note-attributes>
      <author>Ha Dang</author>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><ol><li><div>Dockerfile.magento2</div></li></ol><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div># Use an official Apache + PHP image as a base</div><div>FROM php:8-apache</div><div># Install necessary extensions and tools, including libicu-dev</div><div>RUN apt-get update &amp;&amp; apt-get install -y \</div><div>    nano \</div><div>    libpng-dev \</div><div>    libjpeg-dev \</div><div>    libfreetype6-dev \</div><div>    libzip-dev \</div><div>    libonig-dev \</div><div>    libxml2-dev \</div><div>    libxslt-dev \</div><div>    libssl-dev \</div><div>    libicu-dev \</div><div>    &amp;&amp; docker-php-ext-configure gd --with-freetype --with-jpeg \</div><div>    &amp;&amp; docker-php-ext-install -j$(nproc) gd pdo pdo_mysql zip soap xsl sockets \</div><div>    &amp;&amp; docker-php-ext-configure intl \  </div><div>    &amp;&amp; docker-php-ext-install intl bcmath</div><div># Enable Apache modules and configure Apache</div><div>RUN a2enmod rewrite \</div><div>    &amp;&amp; echo "ServerName localhost" >> /etc/apache2/apache2.conf</div><div>COPY magento.conf /etc/apache2/sites-available/magento.conf</div><div>RUN a2dissite 000-default.conf</div><div>RUN a2ensite magento.conf</div><div>RUN sed -i 's/Listen 80/Listen 0.0.0.0:80/' /etc/apache2/ports.conf</div><div># Copy your Magento project files to the container</div><div>COPY ./magento /var/www/html/magento</div><div>RUN chown -R www-data:www-data /var/www/html/</div><div># Expose the required ports</div><div>EXPOSE 80</div><div>EXPOSE 81</div><div>WORKDIR /var/www/html</div><div># Start Apache</div><div>CMD ["apache2-foreground"]</div></div><ol start="2"><li><div>Dockerfile.mariadb</div></li></ol><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div># db:</div><div>#   container_name: database-magento</div><div>#   image: docker.io/bitnami/mariadb:10.4</div><div>#   ports:</div><div>#     - "3306:3306"</div><div>#   volumes:</div><div>#     - db:/bitnami/mariadb/data</div><div>#   environment:</div><div>#     MARIADB_ROOT_PASSWORD: root</div><div>#     MARIADB_DATABASE: magento</div><div>#     MARIADB_USER: magento</div><div>#     MARIADB_PASSWORD: magento</div><div># db2:</div><div>#   container_name: database-wordpress</div><div>#   image: docker.io/bitnami/mariadb:10.6</div><div>#   ports:</div><div>#     - "3307:3306"</div><div>#   volumes:</div><div>#     - db:/bitnami/mariadb/data</div><div>#   environment:</div><div>#     MARIADB_ROOT_PASSWORD: root</div><div>#     MARIADB_DATABASE: mmsbookstore</div><div>#     MARIADB_USER: hpdang</div><div>#     MARIADB_PASSWORD: MMS123456</div><div># Build the image with a specific name and tag</div><div># You can specify the name and tag using the -t option</div><div># docker build -t mariadb:mms .</div><div>FROM docker.io/bitnami/mariadb:10.4</div><div># ENV MARIADB_ROOT_PASSWORD=root</div><div># ENV MARIADB_DATABASE: magento</div><div># ENV MARIADB_USER=admin</div><div># ENV MARIADB_PASSWORD=MMS123456</div><div>ENV MYSQL_ROOT_PASSWORD=root</div><div>ENV MYSQL_USER=admin</div><div>ENV MYSQL_PASSWORD=MMS123456</div><div># ENV MYSQL_DATABASE=magento</div><div>#Initialization SQL scripts to the Docker container</div><div>COPY ./database/init-magento.sql /docker-entrypoint-initdb.d/init-magento.sql</div><div>COPY ./database/init-magento2.sql /docker-entrypoint-initdb.d/init-magento2.sql</div><div># COPY init-wordpress.sql /docker-entrypoint-initdb.d/init-wordpress.sql</div><div>#Expose the port</div><div>EXPOSE 3306</div><div>#Start MariaDB when container start</div><div># CMD [ "/opt/bitnami/scripts/mariadb/run.sh" ]</div></div><ol start="3"><li><div>docker-compose.yaml</div></li></ol><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>version: "3"</div><div>services:</div><div>  magento:</div><div>    container_name: magento</div><div>    build:</div><div>      context: .</div><div>      dockerfile: Dockerfile.magento2</div><div>    ports:</div><div>      - "80:80"</div><div>    volumes:</div><div>      - ./magento:/var/www/html/magento</div><div>    environment:</div><div>      - APACHE_RUN_USER=www-data</div><div>    depends_on:</div><div>      - db</div><div>      - elasticsearch</div><div>  db:</div><div>    build:</div><div>      context: .</div><div>      dockerfile: ./database/Dockerfile.mariadb</div><div>    container_name: mariadb</div><div>    networks:</div><div>      - multi-web</div><div>    environment:</div><div>      MARIADB_ROOT_PASSWORD: root</div><div>      MARIA_DATABASE: magento</div><div>      MARIADB_USER: admin</div><div>      MARIADB_PASSWORD: MMS123456</div><div>    ports:</div><div>      - "3306:3306"</div><div>  elasticsearch:</div><div>    container_name: elasticsearch</div><div>    image: docker.io/bitnami/elasticsearch:7</div><div>    ports:</div><div>      - "9200:9200"</div><div>    volumes:</div><div>      - elasticsearch:/bitnami/elasticsearch/data</div><div>    networks:</div><div>      - multi-web</div><div>volumes:</div><div>  elasticsearch:</div><div>networks:</div><div>  multi-web:</div></div><ol start="4"><li><div>init-magento.sql</div></li></ol><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>-- Create the 'magento' database</div><div>CREATE DATABASE IF NOT EXISTS magento;</div><div>-- Create a new user 'magento' with a password</div><div>CREATE USER IF NOT EXISTS 'admin'@'%' IDENTIFIED BY 'MMS123456';</div><div>-- Grant privileges to the 'magento' user on the 'magento' database</div><div>GRANT ALL PRIVILEGES ON magento.* TO 'admin'@'%';</div><div>-- Flush privileges to apply changes</div><div>FLUSH PRIVILEGES;</div></div><div><br/></div></en-note>      ]]>
    </content>
  </note>
</en-export>
